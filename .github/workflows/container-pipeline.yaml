name: Push container to ECR


on:
  push:
    branches:
      - "main"
  release:
    types:
      - "published"

jobs:
  push-container:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE }}
          role-session-name: GitHubActions
          aws-region: ${{ vars.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries:  ${{ secrets.DEVTOOLS_ACCOUNT_ID }}


      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws sts assume-role --role-arn  arn:aws-us-gov:iam::${{ secrets.DEVTOOLS_ACCOUNT_ID }}:role/github_actions_ecr --role-session-name githubactions
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          aws sts get-caller-identity
          echo "ECR Repo: $ECR_REPOSITORY"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT